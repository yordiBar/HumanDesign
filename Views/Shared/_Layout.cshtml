<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HumanDesign</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/HumanDesign.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">HumanDesign</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            @* <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a> *@
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Gates
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                <!-- Direct link to All Gates -->
                                <li>
                                    <a class="dropdown-item text-dark" asp-controller="Gates" asp-action="Index">All Gates</a>
                                </li>
                                <!-- Dropdown items for gate groups -->
                                @for (int i = 1; i <= 60; i += 10)
                                {
                                    <li class="dropdown-submenu">
                                        <a class="dropdown-item text-dark dropdown-toggle" href="#">
                                            Gates @i-@Math.Min(i + 9, 60)
                                        </a>
                                        <!-- Submenu for individual gates -->
                                        <ul class="dropdown-menu">
                                            @for (int j = i; j < i + 10 && j <= 60; j++)
                                            {
                                                <!-- Dynamic link to a single gate details action -->
                                                <li>
                                                    <a class="dropdown-item text-dark" asp-controller="Gates" asp-action="GateDetails" asp-route-id="@j">Gate @j</a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Gate Properties
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Locations" asp-action="Index">Location</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Circuits" asp-action="Index">Circuit</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Shadows" asp-action="Index">Shadow</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Repressives" asp-action="Index">Repressive</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Reactives" asp-action="Index">Reactive</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Gifts" asp-action="Index">Gift</a>
                                <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-controller="Siddhis" asp-action="Index">Siddhi</a>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="EnergyTypes" asp-action="Index">Energy Types</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="Centers" asp-action="Index">Center</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="Authorities" asp-action="Index">Authority</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="ProfileLines" asp-action="Index">Profile Line</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="Archetypes" asp-action="Index">Archetype</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(IsActive("Home", "Index") ? "active" : "")" asp-area="" asp-controller="Channels" asp-action="Index">Channel</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - HumanDesign - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const submenuToggles = document.querySelectorAll('.dropdown-submenu > a');

            submenuToggles.forEach(toggle => {
                toggle.addEventListener('click', function (e) {
                    e.preventDefault(); // Prevent default anchor click behavior
                    e.stopPropagation(); // Stop the event from bubbling up

                    let currentSubmenu = this.nextElementSibling;
                    if (currentSubmenu.classList.contains('show')) {
                        currentSubmenu.classList.remove('show');
                    } else {
                        // Close other open submenus in the same dropdown
                        const openSubmenus = this.closest('.dropdown-menu').querySelectorAll('.dropdown-menu.show');
                        openSubmenus.forEach(submenu => {
                            submenu.classList.remove('show');
                        });
                        // Show the current submenu
                        currentSubmenu.classList.add('show');
                    }
                });
            });

            // Close submenus when clicking outside
            document.body.addEventListener('click', function (e) {
                const openSubmenus = document.querySelectorAll('.dropdown-submenu .dropdown-menu.show');
                openSubmenus.forEach(submenu => {
                    if (!submenu.contains(e.target)) {
                        submenu.classList.remove('show');
                    }
                });
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
@functions {
    private bool IsActive(string controller, string action)
    {
        var currentAction = ViewContext.RouteData.Values["action"].ToString();
        var currentController = ViewContext.RouteData.Values["controller"].ToString();
        return string.Equals(currentAction, action, StringComparison.OrdinalIgnoreCase) &&
               string.Equals(currentController, controller, StringComparison.OrdinalIgnoreCase);
    }
}